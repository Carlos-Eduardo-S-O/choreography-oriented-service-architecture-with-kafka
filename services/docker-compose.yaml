version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    expose:
      - 2181
    hostname: "zookeeper"
    networks:
      - kafkacomunication

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    depends_on:
      - zookeeper
    expose:
      - 9092
    hostname: "kafka"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafkacomunication

  cryptography:
    image: cryptography
    build: .
    depends_on:
      - kafka
    ports:
      - "5001:5000"
    hostname: "cryptography"
    volumes:
      - "./01_cryptography:/service"
    command: python3 service.py
    networks:
      externalaccess:
        ipv4_address: 172.29.1.1
      kafkacomunication:

  checkheader:
    image: checkheader
    build: .
    depends_on:
      - kafka
    hostname: "checkheader"
    volumes:
      - "./03_checkheader:/service"
    command: python3 service.py
    networks:
      - kafkacomunication

  checktoken:
    image: checktoken
    build: .
    depends_on:
      - kafka
    hostname: "checktoken"
    volumes:
      - "./02_checktoken:/service"
    command: python3 service.py
    networks:
      - kafkacomunication

  checkerror:
    image: checkerror
    build: .
    depends_on:
      - kafka
    hostname: "checkerror"
    volumes:
      - "./04_checkerror:/service"
    command: python3 service.py
    networks:
      - kafkacomunication

networks:
  externalaccess:
    ipam:
      driver: default
      config:
        - subnet: 172.29.1.0/16
  
  kafkacomunication:
    driver: bridge